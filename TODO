-- autospec, plugins  ---------------------------------------------------------

Silvan Calarco <silvan.calarco@mambasoft.it> 15 février 2007 03:00
À : Davide Madrisan <davide.madrisan@gmail.com>

E' possibile con autospec configurare l'accesso in lettura al repository con
password?
Perché per inviare utilizza le impostazioni in ftp_rw_*, si logga e manda,
mentre per ricevere utilizza ftpurl_ro_* che contiene solo una url e quindi
non funzionano autospec -a1 e il backup/cancellazione dei files vecchi della
funzione -a10. Si può provare a mettere username e password nella url in un
formato di curl? Attualmente cancello a mano i vecchi pacchetti dopo averli
mandati con autospec (per fortuna quelli nel repository privato si contano
sulle dita di una mano).
In ogni caso la configurazione degli host la vedrei più semplice se fosse
organizzata tipo così:

ftp_server[0]="ftp.qilinux.it"
ftp_port[0]=
ftp_passive_mode[0]=on
ftp_user[0]=ftpqilinux
ftp_passwd[0]=*****
ftp_rpms_dir[0]="/devel/RPMS"
ftp_srpms_dir[0]="/devel/SRPMS"
ftp_olddir[0]="/devel/old"
ftp_anonymous_url_prefix[0]="ftp://ftp.qilinux.it/pub/QiLinux"

Se ftp_anonymous_url_prefix è vuota fa l'accesso con password anche in
lettura, altrimenti trova i repository accodandovi ftp_rpms_dir o
ftp_srpms_dir.

ciao,
Silvan

--
mambaSoft di Silvan Calarco - http://www.mambasoft.it


-- spec-create plugin ---------------------------------------------------------


check for non standard (/usr/lib) library files path
====================================================

SOME EXAMPLES
=============

software            main-pck                   devel-pck
-------------------------------------------------------------------------------
a52dec-0.7.4        %{_libdir}/*.so.*          %{_libdir}/*.a
                                               %{_libdir}/*.la
                                               %{_libdir}/*.so

liba52/Makefile.am
   lib_LTLIBRARIES = liba52.la
   liba52_la_SOURCES = bitstream.c imdct.c bit_allocate.c parse.c downmix.c
   liba52_la_LIBADD = @LIBA52_LIBS@ -lm
   liba52_la_LDFLAGS = -no-undefined

liba52/Makefile.am
   noinst_LIBRARIES = libao.a
   libao_a_SOURCES = audio_out.c float2s16.c ... \ ...

src/Makefile.am
   a52dec_LDADD = $(top_builddir)/liba52/liba52.la \
                  $(top_builddir)/libao/libao.a @LIBAO_LIBS@

software            main-pck                            devel-pck
---------------------------------------------------------------------------------------
libavifile-0.7.41   %{_libdir}/*.so.*                   %{_libdir}/*.a
                    %{_libdir}/avifile-0-7/*.a          %{_libdir}/*.la
                    %{_libdir}/avifile-0-7/*.la         %{_libdir}/*.so
                    %{_libdir}/avifile-0-7/*.so         %{_libdir}/pkgconfig/avifile.pc
                    %{_libdir}/avifile-0.7/vidix/*.a
                    %{_libdir}/avifile-0.7/vidix/*.la
                    %{_libdir}/avifile-0.7/vidix/*.so

drivers/libdha/Makefile.am
   if AMM_USE_VIDIX
   if AMM_LINK_SHARED
   lib_LTLIBRARIES = libaviplaydha.la
   else
   noinst_LTLIBRARIES = libdha.la
   endif
   endif

   libaviplaydha_la_SOURCES = $(DHA_SRC)
   libaviplaydha_la_LDFLAGS = -release $(AVIFILE_MAJOR_VERSION).$(AVIFILE_MINOR_VERSION) -version-info 0:$(AVIFILE_MICRO_VERSION):0

   libdha_la_SOURCES = $(DHA_SRC)

drivers/vidix/drivers/Makefile.am
   pkglibdir = $(libdir)/$(PACKAGE)/vidix

   if AMM_USE_VIDIX
   VIDIX_DRIVERS = \
    libgenfb.la \
    libmach64.la \
    libmga_crtc2.la \
    libmga.la \
    libpm3.la \
    libradeon.la \
    librage128.la
   endif
   pkglib_LTLIBRARIES = $(VIDIX_DRIVERS)

   VIDLIBS = $(LINK_LIBDHA) -lm
   VIDLDFLAGS = -module -avoid-version
   libgenfb_la_SOURCES = genfb_vid.c
   libgenfb_la_LIBADD = $(VIDLIBS)
   libgenfb_la_LDFLAGS = $(VIDLDFLAGS)

   libmach64_la_SOURCES = mach64_vid.c
   libmach64_la_LIBADD = $(VIDLIBS)
   libmach64_la_LDFLAGS = $(VIDLDFLAGS)

   ...

software            main-pck                            devel-pck
---------------------------------------------------------------------------------------
libimlib2-1.1.0     %{_libdir}/*.so.*                   %{_libdir}/*.a
                    %{_libdir}/loaders/filter/*.so      %{_libdir}/*.la
                    %{_libdir}/loaders/image/*.so       %{_libdir}/*.so
                                                        %{_libdir}/loaders/filter/*.a
                                                        %{_libdir}/loaders/filter/*.la
                                                        %{_libdir}/loaders/image/*.a
                                                        %{_libdir}/loaders/image/*.la

libltdl/Makefile.am
   if INSTALL_LTDL
   include_HEADERS = ltdl.h
   lib_LTLIBRARIES = libltdl.la
   else
   noinst_HEADERS = ltdl.h
   endif

   if CONVENIENCE_LTDL
   noinst_LTLIBRARIES = libltdlc.la
   endif

   libltdl_la_SOURCES = ltdl.c
   libltdl_la_LDFLAGS = -no-undefined -version-info 3:0:0
   libltdl_la_LIBADD = $(LIBADD_DL)

   libltdlc_la_SOURCES = ltdl.c
   libltdlc_la_LIBADD = $(LIBADD_DL)

   ## Because we do not have automatic dependency tracking:
   ltdl.lo: ltdl.h config.h

src/Makefile.am
   lib_LTLIBRARIES      = libImlib2.la
   libImlib2_la_SOURCES = scale.c ... \ ...
   libImlib2_la_LDFLAGS      = -version-info 2:0:1

   if HAVE_MMX
   libImlib2_la_LIBADD   = $(X_OBJS) @DLLDFLAGS@ $(MMX_OBJS) \
                           $(top_builddir)/libltdl/libltdlc.la \
                           $(x_libs) $(freetype_libs) $(LDFLAGS)
   libImlib2_la_DEPENDENCIES = $(top_builddir)/config.h $(X_OBJS) $(MMX_OBJS)
   else
   libImlib2_la_LIBADD   = $(X_OBJS) @DLLDFLAGS@ \
                           $(top_builddir)/libltdl/libltdlc.la \
                           $(x_libs) $(freetype_libs) $(LDFLAGS)
   libImlib2_la_DEPENDENCIES = $(top_builddir)/config.h $(X_OBJS)
   endif

   SYS_LOADERS_PATH = @pkglibdir@
